version: "3.9"

services:
  postgres_auth:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_AUTH_DB}
      - POSTGRES_USER=${POSTGRES_AUTH_USER}
      - POSTGRES_PASSWORD=${POSTGRES_AUTH_PASSWORD}
    ports:
      - "${POSTGRES_AUTH_PORT}:${POSTGRES_AUTH_INTERNAL_PORT}"
    volumes:
      - db_auth_data:/var/lib/postgresql/data
    env_file:
      - .env

  authservice-migrator:
    build:
      context: .
      dockerfile: AuthService.Migrator/Dockerfile
    depends_on:
      - postgres_auth
    environment:
      - ConnectionStrings__DefaultConnection=${AUTHSERVICE_DEFAULT_CONNECTIONSTRING}
    restart: "no" # мигратор выполняет миграции один раз и завершает работу
    env_file:
      - .env

  authservice-api:
    build:
      context: .
      dockerfile: AuthService.Api/Dockerfile
    depends_on:
      - postgres_auth
      - authservice-migrator
    ports:
      - "${AUTHSERVICE_PORT}:${AUTHSERVICE_INTERNAL_PORT}"
    environment:
      - ConnectionStrings__DefaultConnection=${AUTHSERVICE_DEFAULT_CONNECTIONSTRING}
      - RabbitMQ__HostName=${RABBITMQ_HOSTNAME}
      - RabbitMQ__Port=${RABBITMQ_PORT}
      - RabbitMQ__UserName=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
    env_file:
      - .env
  
  postgres_post:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_POST_DB}
      - POSTGRES_USER=${POSTGRES_POST_USER}
      - POSTGRES_PASSWORD=${POSTGRES_POST_PASSWORD}
    ports:
      - "${POSTGRES_POST_PORT}:${POSTGRES_POST_INTERNAL_PORT}"
    volumes:
      - db_post_data:/var/lib/postgresql/data
    env_file:
      - .env
  
  postservice-migrator:
    build:
      context: .
      dockerfile: PostService.Migrator/Dockerfile
    depends_on:
      - postgres_post
    environment:
      - ConnectionStrings__DefaultConnection=${POSTSERVICE_DEFAULT_CONNECTIONSTRING}
    restart: "no" # выполняется один раз и завершается
    env_file:
      - .env
    
  postservice-api:
    build:
      context: .
      dockerfile: PostService.Api/Dockerfile
    depends_on:
      - postgres_auth
      - postservice-migrator
    ports:
      - "${POSTSERVICE_PORT}:${POSTSERVICE_INTERNAL_PORT}"
    environment:
      - ConnectionStrings__DefaultConnection=${POSTSERVICE_DEFAULT_CONNECTIONSTRING}
      - RabbitMQ__HostName=${RABBITMQ_HOSTNAME}
      - RabbitMQ__Port=${RABBITMQ_PORT}
      - RabbitMQ__UserName=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
    env_file:
      - .env
      
  rabbitmq:
    image: rabbitmq:3-management 
    hostname: rabbitmq 
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}" 
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - .env

volumes:
  db_auth_data:
  db_post_data:
  rabbitmq_data:

