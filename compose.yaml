version: "3.9"

services:
  postgres_auth:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: authservice
      POSTGRES_USER: postblog
      POSTGRES_PASSWORD: postblogpass
    ports:
      - "5439:5432"
    volumes:
      - db_auth_data:/var/lib/postgresql/data

  authservice-migrator:
    build:
      context: .
      dockerfile: AuthService.Migrator/Dockerfile
    depends_on:
      - postgres_auth
    environment:
      ConnectionStrings__DefaultConnection: "Host=postgres_auth;Port=5432;Database=authservice;Username=postblog;Password=postblogpass"
    restart: "no" # мигратор выполняет миграции один раз и завершает работу

  authservice-api:
    build:
      context: .
      dockerfile: AuthService.Api/Dockerfile
    depends_on:
      - postgres_auth
      - authservice-migrator
    ports:
      - "5050:8080"
    environment:
      ConnectionStrings__DefaultConnection: "Host=postgres_auth;Port=5432;Database=authservice;Username=postblog;Password=postblogpass"
  
  postgres_post:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: postservice
      POSTGRES_USER: postblog
      POSTGRES_PASSWORD: postblogpass
    ports:
      - "5433:5432"
    volumes:
      - db_post_data:/var/lib/postgresql/data
  
  postservice-migrator:
    build:
      context: .
      dockerfile: PostService.Migrator/Dockerfile
    depends_on:
      - postgres_post
    environment:
      ConnectionStrings__DefaultConnection: "Host=postgres_post;Port=5432;Database=postservice;Username=postblog;Password=postblogpass"
    restart: "no" # выполняется один раз и завершается
    
  postservice-api:
    build:
      context: .
      dockerfile: PostService.Api/Dockerfile
    depends_on:
      - postgres_auth
      - postservice-migrator
    ports:
      - "5051:8080"
    environment:
      ConnectionStrings__DefaultConnection: "Host=postgres_post;Port=5432;Database=postservice;Username=postblog;Password=postblogpass"

volumes:
  db_auth_data:
  db_post_data:
